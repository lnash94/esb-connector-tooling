/*
*  Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).
*
*  WSO2 LLC. licenses this file to you under the Apache License,
*  Version 2.0 (the "License"); you may not use this file except
*  in compliance with the License.
*  You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing,
*  software distributed under the License is distributed on an
*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
*  KIND, either express or implied.  See the License for the
*  specific language governing permissions and limitations
*  under the License.
*/

package org.wso2.carbon.${connectorName}connector;


import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import org.apache.synapse.MessageContext;
import org.wso2.carbon.connector.core.AbstractConnector;

/**
 * This uses for creating the channel for grpc.
 */
public class GRPCChannelBuilder extends AbstractConnector {

    private static String server;
    private static String port;
    private static final String GRPC_CHANNEL = "grpc_channel";

    public static String getServer() {
        return server;
    }

    public static void setServer(String server) {
        GRPCChannelBuilder.server = server;
    }

    public static String getPort() {
        return port;
    }

    public static void setPort(String port) {
        GRPCChannelBuilder.port = port;
    }

    @Override
    public void connect(MessageContext messageContext) {
        int portInt = Integer.parseInt(getPort());
        ManagedChannel channel = ManagedChannelBuilder
            .forAddress(getServer(), portInt)
            .usePlaintext() // For local testing or non-secure connections
            .build();
        messageContext.setProperty(GRPC_CHANNEL, channel);
    }
}
